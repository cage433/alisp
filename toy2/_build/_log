### Starting build.
# Target: toy.ml.depends, tags: { extension:ml, file:toy.ml, ocaml, ocamldep, quiet, traverse }
/usr/bin/ocamldep -modules toy.ml > toy.ml.depends
# Target: codegen.ml.depends, tags: { extension:ml, file:codegen.ml, ocaml, ocamldep, quiet, traverse, use_llvm, use_llvm_analysis }
/usr/bin/ocamldep -modules codegen.ml > codegen.ml.depends
# Target: ast.ml.depends, tags: { extension:ml, file:ast.ml, ocaml, ocamldep, quiet, traverse }
/usr/bin/ocamldep -modules ast.ml > ast.ml.depends
# Target: ast.cmo, tags: { byte, compile, extension:ml, file:ast.ml, implem, ocaml, quiet, traverse }
/usr/bin/ocamlc -c -o ast.cmo ast.ml
# Target: lexer.ml.depends, tags: { extension:ml, file:lexer.ml, ocaml, ocamldep, quiet, traverse, use_camlp4 }
/usr/bin/ocamldep -pp camlp4of -modules lexer.ml > lexer.ml.depends
# Target: token.ml.depends, tags: { extension:ml, file:token.ml, ocaml, ocamldep, quiet, traverse }
/usr/bin/ocamldep -modules token.ml > token.ml.depends
# Target: token.cmo, tags: { byte, compile, extension:ml, file:token.ml, implem, ocaml, quiet, traverse }
/usr/bin/ocamlc -c -o token.cmo token.ml
# Target: parser.ml.depends, tags: { extension:ml, file:parser.ml, ocaml, ocamldep, quiet, traverse, use_camlp4 }
/usr/bin/ocamldep -pp camlp4of -modules parser.ml > parser.ml.depends
# Target: toplevel.ml.depends, tags: { extension:ml, file:toplevel.ml, ocaml, ocamldep, quiet, traverse }
/usr/bin/ocamldep -modules toplevel.ml > toplevel.ml.depends
# Target: codegen.cmo, tags: { byte, compile, extension:ml, file:codegen.ml, implem, ocaml, quiet, traverse, use_llvm, use_llvm_analysis }
/usr/bin/ocamlc -c -o codegen.cmo codegen.ml
+ /usr/bin/ocamlc -c -o codegen.cmo codegen.ml
File "codegen.ml", line 5, characters 0-9:
Error: Unbound module Llvm
Command exited with code 2.
# Compilation unsuccessful.
